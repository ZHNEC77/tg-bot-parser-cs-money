import json
import os
import asyncio
import time
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.client.bot import DefaultBotProperties
from aiogram.utils.markdown import hbold, hlink
from main import collect_data


dp = Dispatcher()


@dp.message(CommandStart())
async def start(message: types.Message):
    # start_buttons = ['üî™–ù–æ–∂–∏', 'üß§–ü–µ—Ä—á–∞—Ç–∫–∏', 'üî´–°–Ω–∞–π–ø–µ—Ä—Å–∫–∏–µ –≤–∏–Ω—Ç–æ–≤–∫–∏']
    kb = [
        [types.KeyboardButton(text='üî™–ù–æ–∂–∏')],
        [types.KeyboardButton(text='üß§–ü–µ—Ä—á–∞—Ç–∫–∏')],
        [types.KeyboardButton(text='üî´–°–Ω–∞–π–ø–µ—Ä—Å–∫–∏–µ –≤–∏–Ω—Ç–æ–≤–∫–∏')]
    ]
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, keyboard=kb)

    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=keyboard)


@dp.message(F.text == 'üî™–ù–æ–∂–∏')
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...')
    collect_data(cat_type=2)

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
            f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("overprice")}%\n' \
            f'{hbold("–¶–µ–Ω–∞: ")}${item.get("item_price")} üî•'

        if index % 20 == 0:
            time.sleep(7)

        await message.answer(card)


@dp.message(F.text == 'üî´–°–Ω–∞–π–ø–µ—Ä—Å–∫–∏–µ –≤–∏–Ω—Ç–æ–≤–∫–∏')
async def get_discount_guns(message: types.Message):
    await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...')
    collect_data(cat_type=4)

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
            f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("overprice")}%\n' \
            f'{hbold("–¶–µ–Ω–∞: ")}${item.get("item_price")} üî•'

        if index % 20 == 0:
            time.sleep(7)

        await message.answer(card)


@dp.message(F.text == 'üß§–ü–µ—Ä—á–∞—Ç–∫–∏')
async def get_discount_gloves(message: types.Message):
    await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...')
    collect_data(cat_type=13)

    with open('result.json') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("full_name"), item.get("3d"))}\n' \
            f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("overprice")}%\n' \
            f'{hbold("–¶–µ–Ω–∞: ")}${item.get("item_price")} üî•'

        if index % 20 == 0:
            time.sleep(7)

        await message.answer(card)


async def main():
    bot = Bot(token=os.getenv('TOKEN'),
              default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
